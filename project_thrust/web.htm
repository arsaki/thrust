<!DOCTYPE html>
<html>
    <head><meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=no">
        <title>Thrust</title> 
    </head>
    <body>
        <img src="/logo" width="250px">
        <br><button id = "buttonStart" style="height:35px" onclick="changeState(1)" >Start</button>
            <button id = "buttonStop" style="height:35px" onclick="changeState(0)" >Stop</button>
            <button id = "buttonCalib" style="height:35px" onclick="calibrate()" >Calibration</button>
            <a href="/file.csv" download="File">
                <button id ="buttonFile" style="height:35px">Save file</button>
            </a>
        </br>
        <br><span id="state"></span></br>
        <p style="border:3px #808080  solid;width: 175px">
            Thrust, F:
            <br><span id="Thrust"> </span> N</br>
        </p>
        <p style="border:3px #808080  solid;width: 175px">
            Impulse, J:
            <br><span id="Impulse"></span> N*s</br>
        </p>

        <canvas width="700" height="700" id="canvas"></canvas>  

        <script>
            let graphIntId;
            let ImpulseIntId;
            let stateMeasure;
            let thrustArray;
            let arrOfString = [];

            setInterval(function(){getThrust()},250);

            function changeState(newState)
            {
                const xml = new XMLHttpRequest();
                xml.open("GET", "/state_measure?state="+stateMeasure, true);
                if (newState == "1"){
                    stateMeasure = 1;
                    clearGraph();
                    thrustArray = [];
                    drawAxes();
                    graphIntId = setInterval(function(){drawGraph()},250);
                    ImpulseIntId = setInterval(function(){getImpulse()},250);
                    document.getElementById("state").innerHTML = "Measurement started";

                }
                if (newState == "0"){
                    xml.open("GET", "/state_measure?state="+stateMeasure, true);
                    clearInterval(graphIntId);
                    clearInterval(ImpulseIntId);
                    document.getElementById("state").innerHTML = "Measurement stopped";
                    stateMeasure = 0;
                }
                xml.send();
            }

            function getThrust()
            {
                const xml = new XMLHttpRequest();
                xml.onreadystatechange = function(){
                    if (this.readyState == 4 && this.status == 200){
                        document.getElementById("Thrust").innerHTML = this.responseText;
                        if (stateMeasure == "1") {
                            thrustArray += this.responseText + " ";
                            arrOfString = thrustArray.split(" ");
                        }
                    }
                };
                xml.open("GET", "/thrust", true);
                xml.send();

            }

            function getImpulse()
            {
                const xml = new XMLHttpRequest();
                xml.onreadystatechange = function(){
                    if (this.readyState == 4 && this.status == 200){
                        document.getElementById("Impulse").innerHTML = this.responseText;
                    }
                };
                xml.open("GET", "/impulse", true);
                xml.send();
            }

            function calibrate()
            {
                const hxml = new XMLHttpRequest();
                hxml.open("GET", "/calibrate", true);
                hxml.send();
            }

            var canvas = document.getElementById('canvas');
            var ctx = canvas.getContext('2d');

            function drawAxes()
            {
                ctx.strokeStyle = "black";
                ctx.lineWidth = 1.0;
                ctx.beginPath();
                ctx.moveTo(30, 40);
                ctx.lineTo(30, 500);
                ctx.lineTo(500, 500);
                ctx.stroke();
                for (var i=0; i<=11;i++){
                    ctx.strokeStyle = "#808080";
                    ctx.fillText(i*5,0,500-i*46);
                    ctx.beginPath();
                    ctx.moveTo(30, 500-i*46);
                    ctx.lineTo(536, 500-i*46);
                    ctx.stroke();
                }
                for (var i=0; i<=11;i++){
                    ctx.strokeStyle = "#808080";
                    ctx.fillText(i*10,30+i*46,515);
                    ctx.beginPath();
                    ctx.moveTo(30+i*46, 500);
                    ctx.lineTo(30+i*46, 40);
                    ctx.stroke();
                }
            }
            
            drawAxes();
            
            function drawGraph()
            {
                ctx.strokeStyle = 'red';
                ctx.lineWidth = 2.0;
                ctx.beginPath();
                ctx.moveTo(30, 500-(arrOfString[0]*9.2));
                for (var i=1; i<arrOfString.length;i++) {
                    ctx.lineTo(30+i*2.32/2,(500-(arrOfString[i]*9.2)));
                }
                ctx.stroke();
                ctx.lineJoin='round';
                if (arrOfString.length == 1023)
                    changeState(0);
            }

            function clearGraph()
            {
                ctx.clearRect(0, 0, canvas.width, canvas.height);
            }
           
        </script>
    </body>
</html>
